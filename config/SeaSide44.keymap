#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 6
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE  &kp Q  &kp W      &kp E         &kp R                    &kp T                                            &kp Y        &kp U  &lt 7 I    &kp O       &lt 7 P        &kp LC(DELETE)
&kp TAB     &kp A  &kp S      &kp D         &kp F                    &kp G                                            &kp H        &kp J  &kp K      &kp L       &kp SEMICOLON  &mt RIGHT_WIN ENTER
&kp LSHFT   &kp Z  &kp X      &kp C         &kp V                    &kp B                                            &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH      &lt 7 MINUS
                   &kp LCTRL  &kp LEFT_ALT  &mt LEFT_WIN LANGUAGE_2  &lt 1 SPACE  &lt 6 LANG1    &mt RCTRL BACKSPACE  &lt 2 ENTER         &kp PSCRN
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW {
            bindings = <
&tog 3  &trans    &trans                  &trans                    &trans                   &trans                           &kp LG(LEFT_ARROW)  &kp LA(LEFT_ARROW)  &trans        &kp RA(RIGHT_ARROW)  &kp RG(RIGHT_ARROW)          &kp N0
&trans  &kp HOME  &kp LC(LEFT_ARROW)      &kp LC(LA(LG(UP_ARROW)))  &kp LC(RIGHT_ARROW)      &kp PAGE_UP                      &kp RC(C)           &mkp MB1            &kp UP_ARROW  &mkp MB2             &mkp MB3                     &kp N1
&trans  &kp END   &kp LG(LA(LEFT_ARROW))  &kp LS(LA(LG(DOWN)))      &kp LG(LA(RIGHT_ARROW))  &kp PAGE_DOWN                    &kp RC(V)           &kp LEFT_ARROW      &kp DOWN      &kp RIGHT            &kp RA(RC(RG(RIGHT_ARROW)))  &kp N2
                  &trans                  &trans                    &trans                   &trans         &trans    &trans  &trans                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        NUM {
            bindings = <
&trans  &kp SLASH       &kp N7        &kp N8        &kp N9        &kp ASTERISK                    &kp NON_US_BACKSLASH  &kp EXCLAMATION        &kp AT_SIGN       &kp HASH           &kp DOLLAR    &trans
&trans  &kp COLON       &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS                       &kp GRAVE             &kp PERCENT            &kp LCTRL         &kp AMPERSAND      &kp ASTERISK  &trans
&trans  &kp UNDERSCORE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS                        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp COLON     &trans
                        &kp N0        &kp PERIOD    &kp EQUAL     &trans        &trans    &trans  &trans                                       &trans
            >;
        };

        WinJapanese {
            bindings = <
&trans  &kp Q  &kp W         &kp E         &kp R                 &kp T                                 &kp Y      &kp U  &kp I            &kp O       &lt 7 P            &kp N0
&trans  &kp A  &kp S         &kp D         &kp F                 &kp G                                 &kp H      &kp J  &kp K            &kp L       &kp COLON          &kp N1
&trans  &kp Z  &kp X         &kp C         &kp V                 &kp B                                 &kp N      &kp M  &kp COMMA        &kp PERIOD  &kp DOUBLE_QUOTES  &kp N2
               &kp LEFT_WIN  &kp LEFT_ALT  &mt LCTRL LANGUAGE_2  &lt 4 SPACE  &trans    &kp BACKSPACE  &kp ENTER         &kp PRINTSCREEN
            >;
        };

        ARROW_WIN {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans          &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &mkp MB1  &kp UP_ARROW    &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp LEFT  &kp DOWN_ARROW  &trans    &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans            &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &kp N0
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans  &kp N1
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &kp N2
                &trans  &trans  &trans  &trans  &trans    &trans  &trans            &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans            &trans    &trans  &trans    &trans  &kp N0
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans            &mkp MB1  &trans  &mkp MB2  &trans  &kp N1
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans            &trans    &trans  &trans    &trans  &kp N2
                &trans  &trans  &trans  &kp LS(LG(N5))  &kp LS(LG(N4))    &kp LC(DOWN)  &kp LC(UP_ARROW)            &trans
            >;
        };

        CONFIG {
            bindings = <
&tog 0  &bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N0
&trans  &trans          &trans        &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N1
&trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &bootloader  &trans  &trans  &trans  &trans  &kp N2
                        &trans        &trans        &trans        &trans        &trans    &trans  &trans               &trans
            >;
        };
    };
};
