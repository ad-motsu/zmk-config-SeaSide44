#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 6
#define NUM 7
#define JP_UNDERSCORE   LS(0x87)

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos {
        compatible = "zmk,combos";

        mouseclick1 {
            bindings = <&none>;
            key-positions = <19 20>;
        };

        mouseclick2 {
            bindings = <&none>;
            key-positions = <21 20>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        to_layer_3: new_macro {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 3 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "NEW_MACRO";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE  &kp Q  &kp W      &kp E         &kp R                    &kp T                                            &kp Y        &kp U  &lt 5 I    &kp O       &lt 7 P        &kp DELETE
&kp TAB     &kp A  &kp S      &kp D         &kp F                    &kp G                                            &kp H        &kp J  &kp K      &kp L       &kp SEMICOLON  &mt RIGHT_WIN ENTER
&kp LSHFT   &kp Z  &kp X      &kp C         &kp V                    &kp B                                            &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH      &lt 6 MINUS
                   &kp LCTRL  &kp LEFT_ALT  &mt LEFT_WIN LANGUAGE_2  &lt 1 SPACE  &lt 6 LANG1    &mt RCTRL BACKSPACE  &lt 2 ENTER         &kp PSCRN
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW {
            bindings = <
&tog 3  &to_layer_0 Q  &to_layer_0 W           &to_layer_0 E  &to_layer_0 R            &to_layer_0 T                    &to_layer_0 Y  &to_layer_0 U   &to_layer_0 I  &to_layer_0 O  &kp RG(RIGHT_ARROW)          &trans
&trans  &trans         &kp LC(LEFT_ARROW)      &kp PAGE_UP    &kp LC(RIGHT_ARROW)      &kp HOME                         &kp LG(C)      &mkp MB1        &kp UP_ARROW   &mkp MB2       &mkp MB3                     &trans
&trans  &trans         &kp LG(LA(LEFT_ARROW))  &kp PAGE_DOWN  &kp LG(LA(RIGHT_ARROW))  &kp END                          &kp LG(V)      &kp LEFT_ARROW  &kp DOWN       &kp RIGHT      &kp RA(RC(RG(RIGHT_ARROW)))  &trans
                       &trans                  &trans         &trans                   &trans         &trans    &trans  &trans                         &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        NUM {
            bindings = <
&trans  &kp SLASH       &kp N7        &kp N8        &kp N9        &kp ASTERISK                    &kp NON_US_BACKSLASH  &kp EXCLAMATION        &kp AT_SIGN       &kp HASH           &kp DOLLAR    &trans
&trans  &kp COLON       &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS                       &kp GRAVE             &kp PERCENT            &kp LCTRL         &kp AMPERSAND      &kp ASTERISK  &trans
&trans  &kp UNDERSCORE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS                        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp COLON     &trans
                        &kp N0        &kp PERIOD    &kp EQUAL     &trans        &trans    &trans  &trans                                       &trans
            >;
        };

        WinJapanese {
            bindings = <
&kp ESCAPE      &kp Q  &kp W         &kp E         &kp R                 &kp T                                           &kp Y        &kp U  &kp I            &kp O       &lt 7 P    &kp DELETE
&kp TAB         &kp A  &kp S         &kp D         &kp F                 &kp G                                           &kp H        &kp J  &kp K            &kp L       &kp SEMI   &kp ENTER
&kp LEFT_SHIFT  &kp Z  &kp X         &kp C         &kp V                 &kp B                                           &kp N        &kp M  &kp COMMA        &kp PERIOD  &kp SLASH  &lt 6 MINUS
                       &kp LEFT_WIN  &kp LEFT_ALT  &mt LCTRL LANGUAGE_2  &lt 4 SPACE  &lt 6 LANGUAGE_1    &kp BACKSPACE  &lt 5 ENTER         &kp PRINTSCREEN
            >;
        };

        ARROW_WIN {
            bindings = <
&tog 0  &trans  &trans            &trans         &trans               &trans                      &trans     &trans    &trans          &trans     &trans  &trans
&trans  &trans  &kp LG(LC(LEFT))  &kp PAGE_UP    &kp LC(LG(RIGHT))    &kp HOME                    &kp LC(C)  &mkp MB1  &kp UP_ARROW    &mkp MB2   &trans  &trans
&trans  &trans  &kp LG(LEFT)      &kp PAGE_DOWN  &kp LG(RIGHT_ARROW)  &kp END                     &kp LC(V)  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans
                &trans            &trans         &trans               &trans    &trans    &trans  &trans               &trans
            >;
        };

        NUM_WIN {
            bindings = <
&trans  &kp SLASH     &kp N7        &kp N8        &kp N9         &kp DOUBLE_QUOTES                    &kp INT_YEN  &kp EXCLAMATION  &kp LEFT_BRACKET   &kp HASH       &kp DOLLAR             &trans
&trans  &kp SQT       &kp NUMBER_4  &kp N5        &kp NUMBER_6   &kp MINUS                            &kp PLUS     &kp PERCENT      &kp EQUAL          &kp CARET      &kp LS(DOUBLE_QUOTES)  &trans
&trans  &kp LS(0x87)  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &kp COLON                            &kp LS(N8)   &kp LS(N9)       &kp RIGHT_BRACKET  &kp BACKSLASH  &kp LS(N7)             &kp LS(NUMBER_2)
                      &kp N0        &kp PERIOD    &kp LS(MINUS)  &trans             &trans    &trans  &trans                        &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &kp F1  &kp F2  &kp F3  &kp F10                    &trans  &trans    &trans  &trans    &trans  &trans
&trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11                    &trans  &mkp MB1  &trans  &mkp MB2  &trans  &trans
&trans  &trans  &kp F7  &kp F8  &kp F9  &kp F12                    &trans  &trans    &trans  &trans    &trans  &trans
                &trans  &trans  &trans  &trans   &trans    &trans  &trans            &trans
            >;
        };

        CONFIG {
            bindings = <
&to 0   &bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N0
&trans  &trans          &trans        &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N1
&trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &bootloader  &trans  &trans  &trans  &trans  &kp N2
                        &trans        &trans        &trans        &trans        &trans    &trans  &trans               &trans
            >;
        };
    };
};
